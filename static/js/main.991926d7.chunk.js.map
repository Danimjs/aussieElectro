{"version":3,"sources":["StoryPanel.js","MapFunctions.js","stacked-bar.js","index.js","AUSdata/yearDistribution.csv"],"names":["StoryPanel","m_actionFilter","state","visible","id","props","anchorname","paragraphs","headerHandleChange","event","isIntersecting","activeID","app","setActiveID","setState","res","i","this","length","push","content","text","actionFilter","className","onChange","threshold","title","map","paragraph","key","filter","Component","StoryParagraph","m_firedAction","m_statusChanged","m_filterArray","paragraphChange","handleScroll","bind","window","removeEventListener","topOffset","ReactDOM","findDOMNode","getBoundingClientRect","top","bottomOffset","bottom","highlighted","action","objects","addEventListener","ReactHtmlParser","MapFunctions","m_filterStartYear","m_filterEndYear","m_filterType","m_initiated","self","grump","m_colors","currentYear","activeYear","rawtypes","types","getFuel","type","fuelDetail","roundToOne","capacity","Math","round","mapboxgl","accessToken","Map","container","style","zoom","center","coalData","solarData","currentData","on","addSource","data","cluster","clusterMaxZoom","clusterRadius","addLayer","source","paint","property","base","stops","value","tooltip","Marker","tooltipContainer","offset","setLngLat","addTo","e","lngLat","features","getCanvas","cursor","drawPopup","show","color","name","open","decom","type2","render","React","createElement","PopupContent","unmountComponentAtNode","prevState","updateFilters","active","init","document","o","properties","site","yearOpen","yearEnd","plantColor","setTooltip","filtertype","isStyleLoaded","setFilter","height","ref","el","mapContainer","undefined","Stackedbarchart","labels","datasets","label","backgroundColor","percentages","console","log","newObj","percentage","width","options","tooltips","displayColors","callbacks","scales","xAxes","stacked","gridLines","display","yAxes","position","ticks","beginAtZero","max","stepSize","layout","padding","left","responsive","maintainAspectRatio","legend","PureComponent","ScrollyTeller","m_percentageCalcs","updateDimensions","innerWidth","innerHeight","panelHeight","sections","activeId","panelChanged","GetNewPercentages","year","vals","prepPercentages","row","sum","arr","Coal","parseFloat","Solar","Solar2","Gas","Waste","Hydro","Wind","isNaN","toFixed","Year","UNSAFE_componentWillMount","d3","stackedData","then","sectiondata","renderparagraphs","createPanelContent","j","dataSolar","allPanels","setActiveMulti","setActive","ttype","setActiveName","toggleActive","result","feature","replace","url","actions","highlight","k","keywords","cap","lower","c","toUpperCase","section","onClickA","dataCoal","NavMenuTypeItem","handleClick","onClick","StackedBar","NavMenuItem","selector","alignToTop","getElementById","module","exports"],"mappings":"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","file":"static/js/main.991926d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport default class StoryPanel extends Component {\r\n  //a storypanel is visible whenit enters the viewport until another enters.\r\n  m_actionFilter = null\r\n  state = {\r\n    visible: true,\r\n    id: this.props.id,\r\n    anchorname: this.props.anchorname,\r\n    paragraphs: []\r\n  };\r\n\r\n  headerHandleChange = event => {\r\n\r\n    if (event.isIntersecting && this.props.id !== this.props.activeID) {  //this element scrolled into view\r\n      this.props.app.setActiveID(this.props.id)\r\n    }\r\n\r\n    this.setState({\r\n      visible: this.props.id === this.props.activeID\r\n\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    var res = [];\r\n    for (var i = 0; i < this.props.paragraphs.length; i++) {\r\n      res.push(\r\n        { \"text\": this.props.paragraphs[i].props.content.text, \"filter\": this.props.paragraphs[i].props.actionFilter }\r\n      )\r\n\r\n     \r\n\r\n      this.setState({\r\n        paragraphs: res\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <section id={\"section_\" + this.state.id} className={`storyPanelSection ${this.state.visible && this.state.id === this.props.activeID ? 'activePanel' : 'inactivePanel'}`} >\r\n        <Observer onChange={this.headerHandleChange}\r\n          threshold={1}\r\n        >\r\n\r\n          <h1 id={this.props.anchorname} className={`sticky sectiontitle`}>{this.props.title}</h1>\r\n        </Observer>\r\n\r\n        <div id={this.props.anchorname + \"_id\"} className=\"panelcontent\">\r\n          {this.state.paragraphs.map(\r\n            (paragraph, i) =>\r\n              <StoryParagraph\r\n                key={this.state.anchorname + \"_id_p\" + i}\r\n                id={this.state.anchorname + \"_id_p\" + i}\r\n                paragraph={paragraph.text}\r\n                actionFilter={paragraph.filter}\r\n\r\n              />\r\n          )}\r\n        </div>\r\n\r\n      </section>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nclass StoryParagraph extends Component {\r\n\r\n\r\n  m_firedAction = false\r\n  m_statusChanged= false\r\n  m_filterArray = [\"any\", []]\r\n  state = {\r\n    id: this.props.id,\r\n    visible: false\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  };\r\n\r\n  handleScroll(event) {\r\n    //if the element is visible we check where it is on the screen, and highlight it when it enters a threshold, dehighlight when it exits.\r\n    if (this.state.visible) {\r\n      var topOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().top\r\n      var bottomOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().bottom\r\n      if(!this.m_firedAction){\r\n        if(this.state.highlighted){\r\n          if (this.props.actionFilter) { //if this has any actions supplied\r\n         \r\n            this.props.actionFilter.action( this.props.actionFilter.objects,true)\r\n         //   this.m_mapFunctions.setFilterTypeString(this.m_filterArray)\r\n           //TODO HERE this.props.actionFilter.action\r\n          }\r\n          this.m_firedAction = true;\r\n        } else {\r\n          if (this.props.actionFilter) {\r\n          \r\n            this.props.actionFilter.action(null,true)\r\n           // this.m_mapFunctions.showAllTypes()\r\n            this.m_firedAction = true;\r\n          }\r\n        }\r\n      }\r\n      if ((topOffset > 150 && topOffset < 300) || (topOffset < 150 && topOffset > 0 && bottomOffset > 300)) {\r\n        //if this paragraph has anactionFilter to it, apply it!\r\n        if(!this.state.highlighted){\r\n          this.setState({\r\n            highlighted: true\r\n          })\r\n          this.m_firedAction = false\r\n        } \r\n         \r\n        \r\n      } else {\r\n \r\n        if(this.state.highlighted){\r\n          //visible should update...\r\n          this.setState({\r\n            highlighted: false\r\n          })\r\n          //deactivate filter if thereisonw\r\n          this.m_firedAction = false\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n\r\n    //construct the filter if there is one\r\n    /*if (this.props.actionFilter) {\r\n      this.m_filterArray = [\"any\"]\r\n      //create the filter syntax fromthe actionFilter provided\r\n      for (var i = 0; i < this.props.actionFilter.types.length; i++) {\r\n        this.m_filterArray.push([\"==\", [\"get\", \"type\"], this.props.actionFilter.types[i]])\r\n      }\r\n      \r\n     \r\n    }*/\r\n  }\r\n\r\n  //gets called when the element intersects with Observer\r\n  paragraphChange = event => {\r\n    this.setState({\r\n      visible: event.isIntersecting\r\n    })\r\n  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Observer\r\n        onChange={this.paragraphChange}\r\n      >\r\n        <p\r\n          className={`scrolltext ${this.state.highlighted ? \"active\" : \"\"}`}\r\n          id={this.props.id}>\r\n          {ReactHtmlParser(this.props.paragraph)}\r\n     \r\n        </p>\r\n      </Observer>\r\n    )\r\n  }\r\n}","import mapboxgl from 'mapbox-gl'\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\n//import geojson from 'geojson'\r\nexport default class MapFunctions extends Component {\r\n\r\n    // set to 2017 initially despite play preview or you get a bug when using the type dropdown\r\n    m_filterStartYear = ['<=', ['number', ['get', 'yearStart']], 2000]\r\n    m_filterEndYear = ['>=', ['number', ['get', 'yearEnd']], 2000]\r\n    m_filterType = ['!=', ['string', ['get', 'type']], 'placeholder']\r\n\r\n    m_initiated = false\r\n    map = null\r\n\r\n    app = null\r\n    tooltipContainer\r\n    popup\r\n    self = null\r\n    grump = null\r\n    m_colors = {\r\n        \"Coal\": \"#91908d\",\r\n        \"Storage\": \"#4e80e5\",\r\n        \"Solar\": \"#a18600\",\r\n        \"Hydro\": \"#43cfef\",\r\n        \"Wind\": \"#00a98e\",\r\n        \"Biomass\": \"#A7B734\",\r\n        \"Waste\": \"#6b4b06\",\r\n        \"Solar2\": \"#ea545c\",\r\n        \"Gas\": \"#cc9b7a\"\r\n    }\r\n\r\n    state = {\r\n\r\n        currentYear: this.props.activeYear,\r\n        rawtypes: this.props.types\r\n    }\r\n\r\n\r\n    init() {\r\n        if (!this.m_initiated) {\r\n            mapboxgl.accessToken = \"pk.eyJ1Ijoibm9yYWhhbWEiLCJhIjoiY2ptaGFsZDR5MThrczN1dDhtajc1cTFmMSJ9.VEUImGmfsM77LfjErYxDdQ\"\r\n            this.map = new mapboxgl.Map({\r\n                container: \"map\",\r\n                style: \"mapbox://styles/mapbox/streets-v9\",\r\n                zoom: [4],\r\n                center: [140.7751, -38.2744]\r\n            })\r\n\r\n            // const filterType = ['!=', ['string', ['get', 'technology']], 'Battery (Discharging)'];\r\n            var coalData = this.props.coalData;//geojson.parse(data, {Point: ['latitude','longitude']})\r\n            var solarData = this.props.solarData;\r\n            var currentData = this.props.currentData;\r\n            //  console.log(geojsondata)\r\n            this.map.on('load', () => {\r\n\r\n                this.map.addSource('powerplantSource_Coal', {\r\n                    type: 'geojson',\r\n                    data: coalData,\r\n                    cluster: false\r\n                })\r\n\r\n                this.map.addSource('powerplantSource_Solar', {\r\n                    type: 'geojson',\r\n                    data: solarData,\r\n                    cluster: false,\r\n                    clusterMaxZoom:6,\r\n                    clusterRadius: 50\r\n                })\r\n\r\n                this.map.addSource('currentFacilities', {\r\n                    type: 'geojson',\r\n                    data: currentData\r\n                })\r\n              \r\n                this.map.addLayer({\r\n                    id: 'unclusters_solar',\r\n                    type: 'circle',\r\n                    source: 'powerplantSource_Solar',\r\n                    paint: {\r\n                        \r\n                        'circle-color': \"#ffc83e\",\r\n                        'circle-opacity': 0.3,\r\n                        'circle-stroke-color': \"#ffc83e\",\r\n                        'circle-stroke-opacity': 1,\r\n                        'circle-stroke-width': 0.5,\r\n                        'circle-radius': {\r\n                            property: 'capacity',\r\n                            type: 'exponential',\r\n                            base: 2,\r\n                            stops: [\r\n\r\n                                [{ zoom: 2, value: 1 }, 1],\r\n                     \r\n                                [{ zoom: 4.5, value: 1 }, 2],\r\n                 \r\n                                [{ zoom: 8, value: 1 }, 4],\r\n               \r\n                                [{ zoom: 12, value: 1 },6],\r\n           \r\n                                [{ zoom: 15, value: 1 }, 8]\r\n          \r\n                            ]\r\n                        },\r\n                    },\r\n\r\n                    'filter': ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]]\r\n                });\r\n                this.map.addLayer({\r\n                    id: 'allpowerplants',\r\n                    type: 'circle',\r\n                    source:\"currentFacilities\",\r\n                    paint: {\r\n                    'circle-radius': {\r\n                        property: 'capacity',\r\n                        type: 'exponential',\r\n                        base: 2,\r\n                        stops: [\r\n                        [{zoom: 2, value: 1}, 1],\r\n                        [{zoom: 2, value: 1000}, 6],\r\n                        [{zoom: 4.5, value: 1}, 3],\r\n                        [{zoom: 4.5, value: 1000}, 18],\r\n                        [{zoom: 8, value: 1}, 6],\r\n                        [{zoom: 8, value: 1000}, 30],\r\n                        [{zoom: 12, value: 1}, 9],\r\n                        [{zoom: 12, value: 1000}, 42],\r\n                        [{zoom: 15, value: 1}, 12],\r\n                        [{zoom: 15, value: 1000}, 54]\r\n                        ]\r\n                    },\r\n                    'circle-color': [\r\n                        'match',\r\n                        ['get', 'type'],\r\n                        \"Coal\", \"#ced1cc\",\r\n                        \"Storage\", \"#4e80e5\",\r\n                        \"Solar\", \"#ffc83e\",\r\n                        \"Hydro\", \"#43cfef\",\r\n                        \"Wind\", \"#00a98e\",\r\n                        \"Biomass\", \"#A7B734\",\r\n                        \"Solar2\", \"#ea545c\",\r\n                        \"Gas\", \"#cc9b7a\",\r\n                        \"Waste\", \"#6b4b06\",\r\n                        /* other */ '#ccc'\r\n                    ],\r\n                    'circle-opacity': 0.3,\r\n                    'circle-stroke-color':  [\r\n                        'match',\r\n                        ['get', 'type'],\r\n                        \"Coal\", \"#ced1cc\",\r\n                        \"Storage\", \"#4e80e5\",\r\n                        \"Solar\", \"#ffc83e\",\r\n                        \"Hydro\", \"#43cfef\",\r\n                        \"Wind\", \"#00a98e\",\r\n                        \"Biomass\", \"#A7B734\",\r\n                        \"Solar2\", \"#ea545c\",\r\n                        \"Gas\", \"#cc9b7a\",\r\n                        \"Waste\", \"#6b4b06\",\r\n                         /*other,*/  '#ccc' \r\n                    ],\r\n                        'circle-stroke-opacity': 1,\r\n                        'circle-stroke-width': 0.5,\r\n                    },\r\n                    'filter': ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType]\r\n                });\r\n\r\n                this.map.addLayer({\r\n                    id: 'unclusters_coal',\r\n                    type: 'circle',\r\n                    source: 'powerplantSource_Coal',\r\n                    paint: {\r\n                        'circle-radius': {\r\n                            property: 'capacity',\r\n                            type: 'exponential',\r\n                            base: 2,\r\n                            stops: [\r\n                                [{zoom: 2, value: 1}, 1],\r\n                                [{zoom: 2, value: 2500}, 6],\r\n                                [{zoom: 4.5, value: 1}, 3],\r\n                                [{zoom: 4.5, value: 2500}, 20],\r\n                                [{zoom: 8, value: 1}, 6],\r\n                                [{zoom: 8, value: 2500}, 32],\r\n                                [{zoom: 12, value: 1}, 9],\r\n                                [{zoom: 12, value: 2500}, 56],\r\n                                [{zoom: 15, value: 1}, 12],\r\n                                [{zoom: 15, value: 2500}, 60]\r\n                                ]\r\n                        },\r\n                        'circle-color':  \"#404040\",\r\n                        'circle-opacity': 0.3,\r\n                        'circle-stroke-color': \"#404040\",\r\n                        'circle-stroke-opacity': 1,\r\n                        'circle-stroke-width': 0.5\r\n                    },\r\n                    'filter': ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]]\r\n               //     'filter': ['!', ['has', 'point_count']]\r\n                });\r\n                this.map.addLayer({\r\n                    id: 'clusters_solar',\r\n                    type: 'circle',\r\n                    source: 'powerplantSource_Solar',\r\n                    filter: [\"all\", [ 'has', 'point_count'],  this.m_filterStartYear, this.m_filterEndYear, this.m_filterType ],\r\n                    \r\n                    paint: {\r\n                       \r\n                        'circle-color': \"#ffc83e\",\r\n                        'circle-radius': [\r\n                            'step',\r\n                            ['get', 'point_count'],\r\n                            2,\r\n                            50,\r\n                            20,\r\n                            100,\r\n                            50\r\n                        ]\r\n                    }\r\n                });\r\n\r\n            })\r\n            var self = this\r\n\r\n            const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\r\n                offset: [-140, 0]\r\n            }).setLngLat([0, 0]).addTo(this.map);\r\n\r\n            this.map.on('mouseenter', 'unclusters_coal', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'unclusters_coal', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'unclusters_coal', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n\r\n            this.map.on('mouseenter', 'unclusters_coal', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'unclusters_coal', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'unclusters_solar', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n\r\n            this.map.on('mouseenter', 'unclusters_solar', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'unclusters_solar', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'unclusters_solar', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n\r\n            this.map.on('mouseenter', 'allpowerplants', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'allpowerplants', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'allpowerplants', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n            // Change the cursor style as a UI indicator.\r\n            this.map.getCanvas().style.cursor = 'pointer';\r\n            this.m_initiated = true;\r\n        }\r\n\r\n    }\r\n\r\n    setTooltip(show, color, name, capacity, open, decom, type2) {\r\n\r\n        if (show) {\r\n\r\n            ReactDOM.render(\r\n                React.createElement(\r\n                    PopupContent, {\r\n                    color, name, capacity, open, decom, type2\r\n                }\r\n                ),\r\n                this.tooltipContainer\r\n            )\r\n        } else {\r\n\r\n            ReactDOM.unmountComponentAtNode(this.tooltipContainer)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n\r\n        //   console.log(this.props.filter)\r\n        if (this.props.activeYear !== this.state.currentYear) {\r\n            this.setState({\r\n                currentYear: this.props.activeYear\r\n\r\n            })\r\n            this.m_filterStartYear = ['<=', ['number', ['get', 'yearStart']], this.props.activeYear]\r\n            this.m_filterEndYear = ['>=', ['number', ['get', 'yearEnd']], this.props.activeYear]\r\n            this.updateFilters()\r\n        }\r\n        if (this.props.types !== this.state.rawtypes) {\r\n            this.m_filterType = [\"any\"]\r\n            //create the filter syntax fromthe actionFilter provided\r\n            for (var i = 0; i < this.props.types.length; i++) {\r\n                if (this.props.types[i].active)\r\n                    this.m_filterType.push([\"==\", [\"get\", \"type\"], this.props.types[i].type])\r\n            }\r\n\r\n            this.setState({\r\n\r\n                rawtypes: this.props.types\r\n            })\r\n            this.updateFilters()\r\n        }\r\n\r\n        this.init()\r\n    }\r\n    componentDidMount() {\r\n        this.tooltipContainer = document.createElement('div');\r\n        this.init()\r\n    }\r\n    drawPopup(show) {\r\n\r\n        var o = this.grump\r\n        var name = o.properties.site;\r\n        var capacity = o.properties.capacity;\r\n        var open = o.properties.yearOpen;\r\n        var decom = o.properties.yearEnd;\r\n        var plantColor = this.m_colors[o.properties.type];\r\n        var type2 = o.properties.type2;\r\n        var type = o.properties.type;\r\n        this.setTooltip(show, plantColor, name, capacity, open, type===\"Solar\" ? 9999 : decom, type=== \"Solar\" ? type : type2)\r\n\r\n        // Ensure that if the map is zoomed out such that multiple\r\n        // copies of the feature are visible, the popup appears over the copy being pointed to.\r\n        //   while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n        //      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n        // }\r\n\r\n        // Populate the popup and set its coordinates\r\n        // based on the feature found.\r\n        //  this.popup.setLngLat(coordinates)\r\n        //      .setHTML(<PopupContent color={plantColor} name={name} capacity={this.roundToOne(capacity)} lowCarbon={lowCarbon} operator={operator} open={open} fuel={this.getFuel(type, fuelDetail)} chp={chp} />)\r\n        //      .addTo(this.map);\r\n    }\r\n\r\n    setFilterType(filtertype) {\r\n        if (this.map.isStyleLoaded()) {\r\n            this.m_filterType = [\"all\", [\"==\", [\"get\", \"type\"], filtertype]]\r\n            this.updateFilters()\r\n        }\r\n    }\r\n\r\n    updateFilters() {\r\n        if (this.map.isStyleLoaded()) {\r\n            // map.setFilter('powerplants', ['all', filterOperator, filterType, filterStartYear, filterEndYear, filterSite, filterCapacity]);\r\n            this.map.setFilter('unclusters_coal', ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]] )\r\n           \r\n            this.map.setFilter('unclusters_solar', ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]])\r\n            this.map.setFilter('clusters_solar', ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType,['has','point_count']])\r\n            this.map.setFilter('allpowerplants',['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType])\r\n        }\r\n    }\r\n\r\n    getFuel = (type, fuelDetail) => {\r\n        if (fuelDetail === \"-\") {\r\n            return type\r\n        } else if (type === \"Wind\" || type === \"Hydro\") {\r\n            return fuelDetail\r\n        } else {\r\n            return type + \", \" + fuelDetail\r\n        }\r\n    }\r\n\r\n    roundToOne = (capacity) => {\r\n        return +(Math.round(capacity + \"e+1\") + \"e-1\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div style={{ height: this.props.height }} ref={el => this.mapContainer = el} className=\"mapContainer topDistance\" id=\"map\" />\r\n\r\n        )\r\n    }\r\n\r\n}\r\nconst PopupContent = ({ color, name, capacity, open, decom, type2 }) => (\r\n\r\n    <div className={`colour-key popupDiv`}>\r\n        <h3 className=\"popupHeading\" style={{ color: color }}> {name}</h3>\r\n        <div className=\"popupInfo\" style={{ 'backgroundColor': color }} >\r\n            <p><span className=\"label-title\">Capacity: </span>{capacity}<span className=\"units\">MW</span></p>\r\n            {type2 !== \"\" ? <p><span className=\"label-title\">Type: </span>{type2}</p> : \"\"}\r\n            {open !== undefined ? <p><span className=\"label-title\">Year opened: </span>  {open} </p> : \"\"}\r\n             {decom !== 9999 ?<p><span className=\"label-title\"> Decomission: </span> {decom} </p> : \"\"}\r\n\r\n        </div>\r\n    </div>\r\n)\r\n\r\n","// with help from https://bl.ocks.org/reinson/166bae46dd106b45cf2d77c7802768ca\r\n\r\n// zero data converted to 0.001 to avoid messing up the order of the colours if bars are added/removed\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  Bar\r\n} from 'react-chartjs-2';\r\n\r\nimport stacked100 from \"chartjs-plugin-stacked100\"\r\n\r\nexport default class Stackedbarchart extends PureComponent {\r\n  m_colors = {\r\n    \"Coal\": \"#91908d\",\r\n    \"Solar\": \"#ffc83e\",\r\n    \"Hydro\": \"#43cfef\",\r\n    \"Wind\": \"#00a98e\",\r\n    \"Waste\": \"#6b4b06\",\r\n    \"Solar2\": \"#ea545c\",\r\n    \"Gas\": \"#cc9b7a\"\r\n  }\r\n\r\n  /*\r\n     \"Coal\", \"#ced1cc\",\r\n                          \"Storage\", \"#4e80e5\",\r\n                          \"Solar\", \"#ffc83e\",\r\n                          \"Hydro\", \"#43cfef\",\r\n                          \"Wind\", \"#00a98e\",\r\n                          \"Biomass\", \"#A7B734\",\r\n                          \"Solar2\", \"#ea545c\",\r\n                          \"Gas\", \"#cc9b7a\",\r\n                          \"Waste\", \"#6b4b06\",*/\r\n\r\n  state = {\r\n    data: {\r\n      labels: [\"%\"],\r\n      datasets: [{\r\n        label: 'Employee',\r\n        backgroundColor: \"#caf270\",\r\n        data: [12, 59, 5, 56, 58, 12, 59, 87, 45],\r\n      }]\r\n    },\r\n    percentages: null\r\n  }\r\n  componentDidUpdate() {\r\n\r\n    if(this.props.percentages!= this.state.percentages){\r\n    console.log(this.props.percentages)\r\n    var datasets = []\r\n    for (var i = 0; i < this.props.percentages.length; i++) {\r\n      var newObj = {}\r\n      newObj.label = this.props.percentages[i].type\r\n      newObj.backgroundColor = this.m_colors[newObj.label]\r\n      newObj.data = []\r\n      newObj.data[0] = this.props.percentages[i].percentage\r\n      datasets.push(newObj)\r\n    }\r\n\r\n    this.setState({\r\n      data: {\r\n        labels: [\"%\"],\r\n        datasets: datasets\r\n      },\r\n      percentages: this.props.percentages\r\n    })\r\n  }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    var datasets = []\r\n    for (var i = 0; i < this.props.percentages.length; i++) {\r\n      var newObj = {}\r\n      newObj.label = this.props.percentages[i].type\r\n      newObj.backgroundColor = this.m_colors[newObj.label]\r\n      newObj.data = []\r\n      newObj.data[0] = this.props.percentages[i].percentage\r\n      datasets.push(newObj)\r\n    }\r\n\r\n    this.setState({\r\n      data: {\r\n        \r\n        datasets: datasets\r\n      },\r\n      percentages: this.props.percentages\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n    \r\n       \r\n        <Bar\r\n          data={this.state.data}\r\n          width={this.props.width}\r\n          height={this.props.height}\r\n          options={{\r\n            tooltips: {\r\n              \r\n              displayColors: false,\r\n              callbacks: {\r\n                title: function() {}\r\n             }\r\n            },\r\n            scales: {\r\n              xAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: false,\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                },\r\n                \r\n                position: 'right',\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                  max: 100,\r\n                  stepSize: 20\r\n                }\r\n               \r\n              }]\r\n            },\r\n            layout: {\r\n              padding: {\r\n                  left: 20\r\n              }\r\n          },\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            legend: { display: false }\r\n          }}\r\n        />\r\n     \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/responsive.css'\n//import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport StoryPanel from './StoryPanel.js'\n//import * as d3 from 'd3'\nimport dataCoal from './AUSdata/powerStations_coal.json'\nimport dataSolar from './AUSdata/powerStations_solar.json'\nimport currentData from \"./AUSdata/facility_registry.json\"\nimport MapFunctions from './MapFunctions';\nimport sectiondata from './playdata/sections.json'\nimport ScrollIntoView from 'react-scroll-into-view'\nimport Stackedbarchart from './stacked-bar.js'\n\nimport *  as d3 from 'd3'\nimport stackedData from './AUSdata/yearDistribution.csv'\nclass ScrollyTeller extends Component {\n\n\n    m_percentageCalcs = []\n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight, panelHeight: window.innerHeight - 100 });\n\n    };\n  \n    //  m_mapfilter = null;\n    state = {\n        sections: [],\n        width: 0,\n        height: 0,\n        //the years should be read from a file with their corresponding html content\n        // sorteddata: [],\n        activeId: 0,\n        panelHeight: 800,\n        types: [{ \"type\": \"Coal\", \"active\": true },\n        { \"type\": \"Solar\", \"active\": true },\n        { \"type\": \"Solar2\", \"active\": true },\n        { \"type\": \"Hydro\", \"active\": true },\n        { \"type\": \"Waste\", \"active\": true },\n        { \"type\": \"Storage\", \"active\": true },\n        { \"type\": \"Wind\", \"active\": true },\n        { \"type\": \"Gas\", \"active\": true }],\n\n        percentages: [\n            { \"type\": \"Coal\", \"percentage\": 45 },\n            { \"type\": \"Solar\", \"percentage\": 20 },\n            { \"type\": \"Solar2\", \"percentage\": 10 },\n            { \"type\": \"Hydro\", \"percentage\": 5 },\n            { \"type\": \"Waste\", \"percentage\": 5 },\n            { \"type\": \"Wind\", \"percentage\": 5 },\n            { \"type\": \"Gas\", \"percentage\": 15 }\n        ]\n    }\n    panelChanged = false\n    // m_mapFunctions = null\n    //\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\n\n\n    GetNewPercentages = (year) => {\n        console.log(year)\n       \n        if (year < this.m_percentageCalcs[0].year || year === undefined) {\n\n               return this.m_percentageCalcs[0].vals\n          \n        } else if (year> this.m_percentageCalcs[this.m_percentageCalcs.length - 1].year) {\n            \n            return    this.m_percentageCalcs[this.m_percentageCalcs.length - 1].vals\n           \n        } else {\n                var i=0\n                while(this.m_percentageCalcs[i].year < year){\n       \n                    i++\n                }\n                console.log(this.m_percentageCalcs[i].vals)\n                return  this.m_percentageCalcs[i].vals      \n        }\n    \n    }\n\n    prepPercentages = (data) => {\n        console.log(data)\n        //m_percentageCalcs\n        /*0: {Year: \"1989\", Coal: \"121167.00\", Solar: \"\", Solar2: \"\", Hydro: \"14880.00\", …}\n1: {Year: \"1990\", Coal: \"125559.00\", Solar: \"\", Solar2: \"\", Hydro: \"16103.00\", …}\n2: {Year: \"1991\", Coal: \"128884.10\", Solar: \"10.90\", Solar2: \"\", Hydro: \"15768.00\", …}\n3: {Year: \"1992\", Coal: \"131120.70\", Solar: \"13.30\", Solar2: \"\", Hydro: \"16953.00\", …}\n4: {Year: \"1993\", Coal: \"135434.10\", Solar: \"15.90\", Solar2: \"\", Hydro: \"16649.00\", …}\n5: {Year: \"1994\", Coal: \"138354.10\", Solar: \"18.90\", Solar2: \"\", Hydro: \"16239.00\", …}*/\n        var row, sum\n        var arr = []\n        for (var i = 0; i < data.length; i++) {\n            arr = []\n            sum = 0\n            row = data[i]\n            row.Coal = parseFloat(row.Coal)\n            row.Solar = parseFloat(row.Solar)\n            row.Solar2 = parseFloat(row.Solar2)\n            row.Gas = parseFloat(row.Gas)\n            row.Waste = parseFloat(row.Waste)\n            row.Hydro = parseFloat(row.Hydro)\n            row.Wind = parseFloat(row.Wind)\n            if (!isNaN(row.Coal)) {\n                sum += row.Coal\n            }\n            if (!isNaN(row.Solar)) {\n                sum += row.Solar\n            }\n            if (!isNaN(row.Solar2)) {\n                sum += row.Solar2\n            }\n            if (!isNaN(row.Gas)) {\n                sum += row.Gas\n            }\n            if (!isNaN(row.Waste)) {\n                sum += row.Waste\n            }\n            if (!isNaN(row.Hydro)) {\n                sum += row.Hydro\n            }\n            if (!isNaN(row.Wind)) {\n                sum += row.Wind\n            }\n         //   console.log(row)\n            // sum = parseFloat(row.Coal) + parseFloat(row.Solar) + parseFloat(row.Solar2) + parseFloat(row.Hydro) + parseFloat(row.Gas) + parseFloat(row.Waste) + parseFloat(row.Wind)\n\n            arr.push({ \"type\": \"Coal\", \"percentage\": +parseFloat( (row.Coal) / sum * 100 ).toFixed(2)})\n            arr.push({ \"type\": \"Solar\", \"percentage\": +parseFloat((row.Solar) / sum * 100).toFixed(2) })\n            arr.push({ \"type\": \"Solar2\", \"percentage\": +parseFloat((row.Solar2) / sum * 100).toFixed(2) })\n            arr.push({ \"type\": \"Hydro\", \"percentage\": +parseFloat((row.Hydro) / sum * 100).toFixed(2) })\n            arr.push({ \"type\": \"Waste\", \"percentage\": +parseFloat((row.Waste) / sum * 100).toFixed(2) })\n            arr.push({ \"type\": \"Wind\", \"percentage\": +parseFloat((row.Wind) / sum * 100 ).toFixed(2)})\n            arr.push({ \"type\": \"Gas\", \"percentage\": +parseFloat((row.Gas) / sum * 100).toFixed(2) })\n          \n            this.m_percentageCalcs.push({ \"year\": parseFloat(row.Year), vals: arr })\n        }\n       // console.log(this.m_percentageCalcs)\n       // this.updatePercentages(1960)\n    }\n\n    UNSAFE_componentWillMount = function () {\n        window.addEventListener('resize', this.updateDimensions);\n        this.updateDimensions()\n\n        d3.csv(stackedData).then(this.prepPercentages);\n\n        for (var i = 0; i < sectiondata.sections.length; i++) {\n            sectiondata.sections[i].renderparagraphs = this.createPanelContent(sectiondata.sections[i].year, sectiondata.sections[i].paragraphs)\n            //     console.log(sectiondata.sections[i].renderparagraphs)\n        }\n        //  console.log(sectiondata.sections[4].renderparagraphs)\n        //read the content from file.\n        this.setState({\n            sections: sectiondata.sections\n        })\n\n        //  console.log(sectiondata.sections)\n\n        for (var j = 0; j < dataSolar.features.length; j++) {\n\n            dataSolar.features[j].properties.capacity /= 1000;\n\n        }\n\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateDimensions);\n    }\n    allPanels = []\n    setActiveID = (id) => {\n        this.setState({\n            activeId: id,\n       \n            \n        })\n\n        if(this.m_percentageCalcs!==undefined && this.m_percentageCalcs.length > 0){\n            this.setState({\n           \n                percentages: this.GetNewPercentages( this.state.sections[id].year)\n                \n            })\n        }\n      //  this.updatePercentages(this.state.sections[id].year)\n        //this.m_mapFunctions.setFilterYearStart(this.state.years[id])\n        //   this.m_mapFunctions.setFilterStartEnd(this.state.sections[id].year)\n\n        //  this.updatePercentages()\n        //in each year i want to display plants that HAVE STARTED but NOT YET ENDED\n    }\n\n    createPanelContent(year, paragraphs) {\n\n        //read the text from somewhere based on the given year\n        var result = [];\n        var filter = \"\";\n        var key = \"\"\n        for (var i = 0; i < paragraphs.length; i++) {\n            key = year + \"_\" + i\n            //check for features like links, if its a link, replace the \"text\" with a hyperlinnk to the \"url\"\n            if (paragraphs[i].features) {\n                for (var j = 0; j < paragraphs[i].features.length; j++) {\n                    var feature = paragraphs[i].features[j]\n                    if (feature.type === \"link\") {\n                        paragraphs[i].text = paragraphs[i].text.replace(feature.text, '<a href=\"' + feature.url + '\" target=\"_blank\">' + feature.text + '</a>')\n                        //                console.log(paragraphs[i].text)\n                    }\n                }\n            }\n            //if actions aredefined, they are added to the element here.\n            if (paragraphs[i].actions) {\n                for (j = 0; j < paragraphs[i].actions.length; j++) {\n                    var action = paragraphs[i].actions[j]\n                    if (action.highlight) {\n                        if (action.highlight.type === \"type\") {\n                            filter = {\n\n                                \"action\": this.setActiveMulti,\n                                \"objects\": []\n                            }\n                        } else if (action.highlight.type === \"plant\") {\n                            filter = {\n\n                                \"action\": this.setActiveName,\n                                \"objects\": []\n                            }\n                        }\n                        //highlight means highlight the words in the text with a class of the same name, and filter things on the map of this name\n                        for (var k = 0; k < action.highlight.keywords.length; k++) {\n                            paragraphs[i].text = paragraphs[i].text.replace(action.highlight.keywords[k], \"<span class='\" + action.highlight.keywords[k] + \"'>\" + action.highlight.keywords[k] + \"</span>\")\n                            filter.objects.push(this.cap(action.highlight.keywords[k]))\n\n                            //capitalise first letter otherwise the filter breaks \n                        }\n                    }\n                }\n            }\n\n            result.push(\n                <div content={paragraphs[i]} id={key} actionFilter={filter} />\n            )\n        }\n        // console.log(result)\n        return result\n\n    }\n\n    //gets called from child components or when the user clicked the type nav menu. updates state of that menu accordingly, also when a scrolltrigger (de)activated a type\n    setActiveMulti = (types) => {\n\n        var arr = null\n        if (types === null) {\n            arr = [{ \"type\": \"Coal\", \"active\": true },\n            { \"type\": \"Gas\", \"active\": true },\n            { \"type\": \"Hydro\", \"active\": true },\n            { \"type\": \"Wind\", \"active\": true },\n            { \"type\": \"Waste\", \"active\": true },\n            { \"type\": \"Solar\", \"active\": true },\n            { \"type\": \"Solar2\", \"active\": true }]\n\n        } else {\n            arr = [{ \"type\": \"Coal\", \"active\": false },\n            { \"type\": \"Gas\", \"active\": false },\n            { \"type\": \"Hydro\", \"active\": false },\n            { \"type\": \"Wind\", \"active\": false },\n            { \"type\": \"Waste\", \"active\": false },\n            { \"type\": \"Solar\", \"active\": false },\n            { \"type\": \"Solar2\", \"active\": true }]\n            for (var i = 0; i < arr.length; i++) {\n                for (var j = 0; j < types.length; j++) {\n                    if (arr[i].type === types[j]) {\n                        arr[i].active = true\n                        break;\n                    }\n                }\n            }\n\n        }\n        this.setState({\n            types: arr\n        })\n    }\n\n    setActive = (ttype, active) => {\n        //  console.log(index)\n        this.setState(state => {\n            const types = state.types.map((type, i) => {\n                if (type === ttype) {\n                    return { \"type\": type.type, \"active\": active }\n                } else {\n                    return type;\n                }\n            });\n            return {\n                types\n            };\n        })\n    }\n\n    setActiveName = (name) => {\n\n    }\n    toggleActive = (ttype) => {\n        console.log(ttype)\n        this.setState(state => {\n            const types = state.types.map((type) => {\n                if (type.type === ttype) {\n                    return { \"type\": type.type, \"active\": !type.active }\n                } else {\n                    return type;\n                }\n            });\n            return {\n                types\n            };\n        })\n    }\n    //capitalise the first letter of  string\n    cap(lower) {\n        return lower.replace(/^\\w/, c => c.toUpperCase());\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"navbar\" id=\"yearNav\">\n                    {this.state.sections.map(\n                        (section, i) =>\n                            <NavMenuItem\n                                key={i}\n                                id={i}\n                                name={section.year}\n                                activeId={this.state.activeId}\n                            />\n                    )}\n                </div>\n                <div className=\"navbar navbar_right\" id=\"typeNav\">\n                    <span className=\"typeSelectionLabel\">Type selection</span>\n                    {this.state.types.map(\n                        (type, i) =>\n                            <NavMenuTypeItem\n                                key={i}\n                                onClickA={this.toggleActive}\n                                type={type.type}\n                                active={type.active}\n                            />\n                    )}\n                </div>\n                <div className=\"MainContainer\">\n                    {/*  <StackedBar  percentages={this.state.percentages} height={this.state.panelHeight}/>--> */}\n                    <div className=\"Panels topDistance\" style={{ height: this.state.panelHeight }}>\n\n                        {this.state.sections.map(\n                            (section, i) =>\n\n                                <StoryPanel\n                                    key={i}\n                                    id={i}\n                                    app={this}\n                                    activeID={this.state.activeId} //the Storypanels figure out if they are the active panel and display accordingly\n                                    title={section.year}\n                                    anchorname={\"section\" + section.year}\n                                    paragraphs={section.renderparagraphs}\n                                />\n                        )}\n                    </div>\n                    <StackedBar height={this.state.panelHeight-70} percentages={this.state.percentages} />\n                    <MapFunctions types={this.state.types} coalData={dataCoal} currentData={currentData} solarData={dataSolar} height={this.state.panelHeight} activeYear={this.state.sections !== undefined ? this.state.sections[this.state.activeId].year : \"1950\"} />\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass NavMenuTypeItem extends Component {\n    handleClick = () => {\n        this.props.onClickA(this.props.type);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className={`navItem navItemColor ${this.props.active ? \"navItemActive_\" + this.props.type : \"\"}`}> {this.props.type} </div>\n\n        );\n    }\n}\n\nclass StackedBar extends Component {\n    render() {\n        return (\n            <div className=\"mapBorder\" style={{ height: this.props.height }} id=\"stackedBar\">\n                <Stackedbarchart percentages={this.props.percentages} width={85} height={this.props.height} /> \n            </div>\n        )\n    }\n}\nconst NavMenuItem = ({ id, name, activeId }) => (\n\n    <ScrollIntoView\n        selector={`#section${name}`}\n        alignToTop={true} >\n        <div className={`navItem ${id === activeId ? \"navItemActive\" : \"\"} `}> {name} </div>\n    </ScrollIntoView>\n)\nReactDOM.render(<ScrollyTeller />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/yearDistribution.2c141c8d.csv\";"],"sourceRoot":""}