{"version":3,"sources":["facilities.csv","StoryPanel.js","MapFunctions.js","index.js"],"names":["module","exports","StoryPanel","state","visible","threshold","id","props","data","headerHandleChange","event","isIntersecting","activeID","app","setActiveID","setState","this","divElement","clientHeight","onChange","title","className","ref","content","Component","MapFunctions","container","map","mapboxgl","accessToken","Map","style","zoom","center","geojsondata","geojson","parse","Point","on","console","log","addLayer","type","source","paint","property","base","stops","value","filtertype","isStyleLoaded","filterType","setFilter","ScrollyTeller","alldata","sorteddata","activeId","panelHeight","panelChanged","m_mapFunctions","componentDidMount","window","innerHeight","d3","then","i","item","currTech","length","technology","allPanels","push","mapContainer","setFilterType","parentIndex","contentItems","res","info","key","name","facility","status","region","capacity","generatorcap","latitude","longitude","panel","height","createPanelContent","el","PanelContent","NavMenuItem","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.965bc1d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/facilities.b841217a.csv\";","import React, { Component } from 'react';\r\nimport Observer from '@researchgate/react-intersection-observer';\r\n\r\n\r\nexport default class StoryPanel extends Component {\r\n    //a storypanel is visible whenit enters the viewport until another enters.\r\n  state = {\r\n    visible: true ,\r\n    threshold: 1,\r\n    id: this.props.id,\r\n    data: []\r\n  };\r\n\r\n    headerHandleChange = event => {\r\n \r\n        if(event.isIntersecting && this.props.id!==this.props.activeID ) {  //this element scrolled into view\r\n            this.props.app.setActiveID(this.props.id)\r\n        }\r\n\r\n    this.setState({\r\n      visible:  this.props.id===this.props.activeID, \r\n    \r\n    });\r\n  };\r\n\r\n\r\n  componentDidMount(){\r\n    \r\n         var n = 400\r\n        if(this.divElement.clientHeight  > n) {\r\n            \r\n          //  console.log(\"Thres: \" + n/this.divElement.clientHeight)\r\n            this.setState({\r\n                threshold: [n/this.divElement.clientHeight,1]\r\n            })\r\n        }\r\n       \r\n           \r\n       // https://biocache-ws.ala.org.au/ws/occurrences/search?q={q}&fq={fq}\r\n     \r\n  }\r\n\r\n  render(){\r\n    return (  \r\n        <Observer\r\n        onChange={this.headerHandleChange}\r\n        threshold={this.state.threshold}\r\n        >\r\n        <section id={this.props.title} className={`storyPanelSection ${ this.state.visible && this.state.id===this.props.activeID ? 'activePanel':'inactivePanel'}`}\r\n            ref={ (divElement) => { this.divElement = divElement } }   >\r\n          \r\n              <h1>{this.props.title}</h1>\r\n               {this.props.content} \r\n           \r\n        </section>\r\n        </Observer>\r\n        )\r\n}\r\n}\r\n\r\n","import mapboxgl from 'mapbox-gl'\r\nimport geojson from 'geojson'\r\nexport default class MapFunctions {\r\n\r\n    // set to 2017 initially despite play preview or you get a bug when using the type dropdown\r\n    map = null\r\n    constructor(data, container) {\r\n        mapboxgl.accessToken = \"pk.eyJ1Ijoibm9yYWhhbWEiLCJhIjoiY2ptaGFsZDR5MThrczN1dDhtajc1cTFmMSJ9.VEUImGmfsM77LfjErYxDdQ\"\r\n        this.map = new mapboxgl.Map({\r\n            container: container,\r\n            style: \"mapbox://styles/mapbox/streets-v9\",\r\n            zoom: [3],\r\n            center: [137.15, -40.5]\r\n        })\r\n       // const filterType = ['!=', ['string', ['get', 'technology']], 'Battery (Discharging)'];\r\n        var geojsondata = geojson.parse(data, {Point: ['latitude','longitude']})\r\n       // console.log(geojsondata)\r\n        this.map.on('load', () => {\r\n            console.log(\"on load...\")\r\n            this.map.addLayer({\r\n                id: 'powerplants',\r\n                type: 'circle',\r\n                source: {\r\n                    type: 'geojson',\r\n                    data: geojsondata\r\n                },\r\n                paint: {\r\n                    'circle-radius': {\r\n                        property: 'capacity',\r\n                        type: 'exponential',\r\n                        base: 0.8,\r\n                        stops: [\r\n                            [{ zoom: 2, value: 1 }, 0.2],\r\n                            [{ zoom: 2, value: 2500 }, 5],\r\n                            [{ zoom: 4.5, value: 1 }, 2],\r\n                            [{ zoom: 4.5, value: 2500 }, 21],\r\n                            [{ zoom: 8, value: 1 }, 4],\r\n                            [{ zoom: 8, value: 2500 }, 32],\r\n                            [{ zoom: 12, value: 1 }, 6],\r\n                            [{ zoom: 12, value: 2500 }, 37],\r\n                            [{ zoom: 15, value: 1 }, 8],\r\n                            [{ zoom: 15, value: 2500 }, 42]\r\n                        ]\r\n                    },\r\n                    'circle-color': [\r\n                        'match',\r\n                        ['get', 'technology'],\r\n                        \"Black Coal\", \"#ced1cc\",\r\n                        \"Battery (Discharging)\", \"#4e80e5\",\r\n                        \"Hydro\", \"#ffc83e\",\r\n                        \"Hydro,Pumps\", \"#ffc83e\",\r\n                        \"Pumps\", \"#ffc83e\",\r\n                        \"Biomass\", \"#dd54b6\",\r\n                        \"Oil\", \"#a45edb\",\r\n                        \"Brown Coal\", \"#43cfef\",\r\n                        \"Distillate,Hydro\", \"#43cfef\",\r\n                        \"Gas (CCGT)\", \"#00a98e\",\r\n                        \"Gas (OCGT)\", \"#00a98e\",\r\n                        \"Gas (Reciprocating)\", \"#00a98e\",\r\n                        \"Gas (Steam)\", \"#00a98e\",\r\n                        \"Gas (Waste Coal Mine)\", \"#00a98e\",\r\n                        \"Bioenergy (Biomass)\", \"#A7B734\",\r\n                        \"Distillate\", \"#ea545c\",\r\n                        \"Bioenergy (Biogas)\", \"#cc9b7a\",\r\n                        \"Solar (Utility)\", \"#ffd300\",\r\n                        \"Solar (Utility),Wind\", \"#ffd300\",\r\n                        \"Wind\", \"#0000FF\",\r\n\r\n            /* other */ '#ccc'\r\n                    ],\r\n                    'circle-opacity': 0.77\r\n                },\r\n                'filter':[\"all\",[\"==\", [\"get\",\"technology\"], \"Battery (Discharging)\"]]\r\n            });\r\n\r\n        })\r\n        \r\n    }\r\n\r\n    setFilterType(filtertype){\r\n        if(this.map.isStyleLoaded()){\r\n        const filterType = [\"all\",[\"==\", [\"get\",\"technology\"], filtertype]]\r\n        this.map.setFilter('powerplants',['all', filterType])\r\n        }\r\n    }\r\n\r\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport StoryPanel from './StoryPanel.js'\nimport * as d3 from 'd3'\nimport data from './facilities.csv';\nimport MapFunctions from './MapFunctions';\n\n\nclass ScrollyTeller extends Component {\n\n    //  m_mapfilter = null;\n    state = {\n        alldata: [],\n        sorteddata: [],\n        activeId: 0,\n        panelHeight:700\n    }\n    panelChanged = false\n    m_mapFunctions = null\n    //\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\n\n    componentDidMount = function () {\n        //adjust height\n        this.setState({panelHeight: window.innerHeight-130})\n        d3.csv(data).then((data) => {\n            this.setState({\n                alldata: data\n            })\n            //\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\n            var i\n            var item\n            var currTech = \"Fitzlibutzli\"\n            console.log(data)\n            for (i = 0; i < data.length; i++) {\n                item = data[i]\n                if (item.technology !== currTech) {\n                    this.allPanels.push({ content: [], title: item.technology })\n                    this.allPanels[this.allPanels.length - 1].content.push(item)\n                    currTech = item.technology\n                } else {\n                    this.allPanels[this.allPanels.length - 1].content.push(item)\n                }\n\n            }\n            console.log(this.allPanels);\n            this.m_mapFunctions = new MapFunctions(data,this.mapContainer)\n            this.setState({\n                sorteddata: this.allPanels\n            })\n\n        })   \n    }\n    allPanels = []\n    setActiveID = (id) => {\n        this.setState({\n            activeId: id\n        })\n        this.m_mapFunctions.setFilterType(this.state.sorteddata[id].title)\n    }\n\n    componentDidUpdate() {\n        // console.log(this.state.alldata)\n\n    }\n\n    createPanelContent(parentIndex) {\n        var contentItems = this.state.sorteddata[parentIndex].content\n        var res = []\n        for (var i = 0; i < contentItems.length; i++) {\n            var info = contentItems[i]\n            res.push(<PanelContent\n                key={i}\n                name={info.facility}\n                status={info.status}\n                region={info.region}\n                capacity={info.generatorcap}\n                latitude={info.latitude}\n                longitude={info.longitude}\n            />)\n        }\n        return res;\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"navbar\">\n                        {this.state.sorteddata.map(\n                            (panel,i) =>\n                            <NavMenuItem\n                                key={i}\n                                name={panel.title}\n                            />\n                         \n                        )}\n                    </div>\n                <div className=\"MainContainer\">                  \n                    <div className=\"Panels\" style={{height: this.state.panelHeight}}>\n                        {this.state.sorteddata.map(\n                            (panel, i) =>\n                                //\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\n\n                                <StoryPanel\n                                    key={i}\n                                    id={i}\n                                    app={this}\n                                    activeID={this.state.activeId} //the Storypanels figure out if they are the active panel and display accordingly\n                                    title={panel.title}\n                                    content={this.createPanelContent(i)}\n                                />\n                        )}\n                    </div>\n                    <div style={{height: this.state.panelHeight}} ref={el => this.mapContainer = el} className=\"mapContainer\" />\n                </div>\n              \n            </div>\n        );\n    }\n\n}\n\n//\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\nconst PanelContent = ({ name, status, region, capacity, latitude, longitude }) => (\n    <div className=\"panelContentFragment\">\n        <h3>{name}</h3>\n        <p> Status: {status} </p>\n        <p> Capacity: {capacity}\n        </p>\n        <p>Region: {region}</p>\n        <span>Latitude/Longitude: {latitude}/{longitude}</span>\n    </div>\n);\n\nconst NavMenuItem = ({name}) => (\n   \n    <a href={\"#\"+name} > {name} </a>\n)\nReactDOM.render(<ScrollyTeller />, document.getElementById('root'));\n"],"sourceRoot":""}