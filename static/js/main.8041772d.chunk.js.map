{"version":3,"sources":["StoryPanel.js","MapFunctions.js","stacked-bar.js","index.js","AUSdata/yearDistribution.csv"],"names":["StoryPanel","m_actionFilter","state","visible","id","props","anchorname","paragraphs","headerHandleChange","event","isIntersecting","activeID","app","setActiveID","setState","res","i","this","length","push","content","text","actionFilter","className","onChange","threshold","title","map","paragraph","key","filter","Component","StoryParagraph","m_firedAction","m_statusChanged","m_filterArray","paragraphChange","handleScroll","bind","window","removeEventListener","topOffset","ReactDOM","findDOMNode","getBoundingClientRect","top","bottomOffset","bottom","highlighted","action","objects","addEventListener","ReactHtmlParser","MapFunctions","m_filterStartYear","m_filterEndYear","m_filterType","m_initiated","self","grump","m_colors","currentYear","activeYear","rawtypes","types","zoomlevel","getFuel","type","fuelDetail","roundToOne","capacity","Math","round","mapboxgl","accessToken","Map","container","style","zoom","center","coalData","solarData","currentData","on","addSource","data","cluster","clusterMaxZoom","clusterRadius","addLayer","source","paint","property","stops","value","base","tooltip","Marker","tooltipContainer","offset","setLngLat","addTo","e","lngLat","features","getCanvas","cursor","drawPopup","getZoom","show","color","name","open","decom","type2","render","React","createElement","PopupContent","unmountComponentAtNode","prevState","updateFilters","active","init","document","o","properties","site","yearOpen","yearEnd","plantColor","setTooltip","filtertype","isStyleLoaded","setFilter","debug","height","ref","el","mapContainer","undefined","Stackedbarchart","labels","datasets","label","backgroundColor","percentages","console","log","newObj","percentage","width","options","tooltips","displayColors","callbacks","tooltipItem","datasetIndex","yLabel","scales","xAxes","stacked","gridLines","display","yAxes","position","ticks","beginAtZero","max","stepSize","layout","padding","left","responsive","maintainAspectRatio","legend","PureComponent","ScrollyTeller","m_debug","m_percentageCalcs","updateDimensions","innerWidth","innerHeight","panelHeight","sections","activeId","panelChanged","GetNewPercentages","year","vals","prepPercentages","row","sum","arr","Coal","parseFloat","Solar","Solar2","Gas","Waste","Hydro","Wind","isNaN","toFixed","Year","UNSAFE_componentWillMount","d3","stackedData","then","val","postcode","dataSolar","obj","sectiondata","renderparagraphs","createPanelContent","j","gValue","trunc","allPanels","setActiveMulti","setActive","ttype","setActiveName","toggleActive","result","feature","replace","url","actions","highlight","k","keywords","cap","lower","c","toUpperCase","section","onClickA","dataCoal","NavMenuTypeItem","handleClick","onClick","StackedBar","NavMenuItem","selector","alignToTop","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8041772d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport Observer from '@researchgate/react-intersection-observer';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport default class StoryPanel extends Component {\r\n  //a storypanel is visible whenit enters the viewport until another enters.\r\n  m_actionFilter = null\r\n  state = {\r\n    visible: true,\r\n    id: this.props.id,\r\n    anchorname: this.props.anchorname,\r\n    paragraphs: []\r\n  };\r\n\r\n  headerHandleChange = event => {\r\n\r\n    if (event.isIntersecting && this.props.id !== this.props.activeID) {  //this element scrolled into view\r\n      this.props.app.setActiveID(this.props.id)\r\n    }\r\n\r\n    this.setState({\r\n      visible: this.props.id === this.props.activeID\r\n\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    var res = [];\r\n    for (var i = 0; i < this.props.paragraphs.length; i++) {\r\n      res.push(\r\n        { \"text\": this.props.paragraphs[i].props.content.text, \"filter\": this.props.paragraphs[i].props.actionFilter }\r\n      )\r\n\r\n     \r\n\r\n      this.setState({\r\n        paragraphs: res\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <section id={\"section_\" + this.state.id} className={`storyPanelSection ${this.state.visible && this.state.id === this.props.activeID ? 'activePanel' : 'inactivePanel'}`} >\r\n        <Observer onChange={this.headerHandleChange}\r\n          threshold={1}\r\n        >\r\n\r\n          <h1 id={this.props.anchorname} className={`sticky sectiontitle`}>{this.props.title}</h1>\r\n        </Observer>\r\n\r\n        <div id={this.props.anchorname + \"_id\"} className=\"panelcontent\">\r\n          {this.state.paragraphs.map(\r\n            (paragraph, i) =>\r\n              <StoryParagraph\r\n                key={this.state.anchorname + \"_id_p\" + i}\r\n                id={this.state.anchorname + \"_id_p\" + i}\r\n                paragraph={paragraph.text}\r\n                actionFilter={paragraph.filter}\r\n\r\n              />\r\n          )}\r\n        </div>\r\n\r\n      </section>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nclass StoryParagraph extends Component {\r\n\r\n\r\n  m_firedAction = false\r\n  m_statusChanged= false\r\n  m_filterArray = [\"any\", []]\r\n  state = {\r\n    id: this.props.id,\r\n    visible: false\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  };\r\n\r\n  handleScroll(event) {\r\n    //if the element is visible we check where it is on the screen, and highlight it when it enters a threshold, dehighlight when it exits.\r\n    if (this.state.visible) {\r\n      var topOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().top\r\n      var bottomOffset = ReactDOM.findDOMNode(this).getBoundingClientRect().bottom\r\n      if(!this.m_firedAction){\r\n        if(this.state.highlighted){\r\n          if (this.props.actionFilter) { //if this has any actions supplied\r\n         \r\n            this.props.actionFilter.action( this.props.actionFilter.objects,true)\r\n         //   this.m_mapFunctions.setFilterTypeString(this.m_filterArray)\r\n           //TODO HERE this.props.actionFilter.action\r\n          }\r\n          this.m_firedAction = true;\r\n        } else {\r\n          if (this.props.actionFilter) {\r\n          \r\n            this.props.actionFilter.action(null,true)\r\n           // this.m_mapFunctions.showAllTypes()\r\n            this.m_firedAction = true;\r\n          }\r\n        }\r\n      }\r\n      if ((topOffset > 150 && topOffset < 300) || (topOffset < 150 && topOffset > 0 && bottomOffset > 300)) {\r\n        //if this paragraph has anactionFilter to it, apply it!\r\n        if(!this.state.highlighted){\r\n          this.setState({\r\n            highlighted: true\r\n          })\r\n          this.m_firedAction = false\r\n        } \r\n         \r\n        \r\n      } else {\r\n \r\n        if(this.state.highlighted){\r\n          //visible should update...\r\n          this.setState({\r\n            highlighted: false\r\n          })\r\n          //deactivate filter if thereisonw\r\n          this.m_firedAction = false\r\n        }\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n\r\n    //construct the filter if there is one\r\n    /*if (this.props.actionFilter) {\r\n      this.m_filterArray = [\"any\"]\r\n      //create the filter syntax fromthe actionFilter provided\r\n      for (var i = 0; i < this.props.actionFilter.types.length; i++) {\r\n        this.m_filterArray.push([\"==\", [\"get\", \"type\"], this.props.actionFilter.types[i]])\r\n      }\r\n      \r\n     \r\n    }*/\r\n  }\r\n\r\n  //gets called when the element intersects with Observer\r\n  paragraphChange = event => {\r\n    this.setState({\r\n      visible: event.isIntersecting\r\n    })\r\n  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Observer\r\n        onChange={this.paragraphChange}\r\n      >\r\n        <p\r\n          className={`scrolltext ${this.state.highlighted ? \"active\" : \"\"}`}\r\n          id={this.props.id}>\r\n          {ReactHtmlParser(this.props.paragraph)}\r\n     \r\n        </p>\r\n      </Observer>\r\n    )\r\n  }\r\n}","import mapboxgl from 'mapbox-gl'\r\nimport React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom'\r\n//import geojson from 'geojson'\r\nexport default class MapFunctions extends Component {\r\n\r\n    // set to 2017 initially despite play preview or you get a bug when using the type dropdown\r\n    m_filterStartYear = ['<=', ['number', ['get', 'yearStart']], 2000]\r\n    m_filterEndYear = ['>=', ['number', ['get', 'yearEnd']], 2000]\r\n    m_filterType = ['!=', ['string', ['get', 'type']], 'placeholder']\r\n\r\n    m_initiated = false\r\n    map = null\r\n\r\n    app = null\r\n    tooltipContainer\r\n    popup\r\n    self = null\r\n    grump = null\r\n    m_colors = {\r\n        \"Coal\": \"#91908d\",\r\n        \"Storage\": \"#4e80e5\",\r\n        \"Solar\": \"#a18600\",\r\n        \"Hydro\": \"#43cfef\",\r\n        \"Wind\": \"#00a98e\",\r\n        \"Biomass\": \"#A7B734\",\r\n        \"Waste\": \"#6b4b06\",\r\n        \"Solar2\": \"#ea545c\",\r\n        \"Gas\": \"#cc9b7a\"\r\n    }\r\n\r\n    state = {\r\n\r\n        currentYear: this.props.activeYear,\r\n        rawtypes: this.props.types,\r\n        zoomlevel: 0\r\n    }\r\n\r\n\r\n    init() {\r\n        if (!this.m_initiated) {\r\n            mapboxgl.accessToken = \"pk.eyJ1Ijoibm9yYWhhbWEiLCJhIjoiY2ptaGFsZDR5MThrczN1dDhtajc1cTFmMSJ9.VEUImGmfsM77LfjErYxDdQ\"\r\n            this.map = new mapboxgl.Map({\r\n                container: \"map\",\r\n                style: \"mapbox://styles/mapbox/streets-v9\",\r\n                zoom: [4],\r\n                center: [140.7751, -38.2744]\r\n            })\r\n\r\n           \r\n            // const filterType = ['!=', ['string', ['get', 'technology']], 'Battery (Discharging)'];\r\n            var coalData = this.props.coalData;//geojson.parse(data, {Point: ['latitude','longitude']})\r\n            var solarData = this.props.solarData;\r\n            var currentData = this.props.currentData;\r\n            //  console.log(geojsondata)\r\n            this.map.on('load', () => {\r\n\r\n                this.map.addSource('powerplantSource_Coal', {\r\n                    type: 'geojson',\r\n                    data: coalData,\r\n                    cluster: false\r\n                })\r\n\r\n                this.map.addSource('powerplantSource_Solar', {\r\n                    type: 'geojson',\r\n                    data: solarData,\r\n                    cluster: false,\r\n                    clusterMaxZoom:6,\r\n                    clusterRadius: 50\r\n                })\r\n\r\n                this.map.addSource('currentFacilities', {\r\n                    type: 'geojson',\r\n                    data: currentData\r\n                })\r\n              \r\n                this.map.addLayer({\r\n                    id: 'unclusters_solar',\r\n                    type: 'circle',\r\n                    source: 'powerplantSource_Solar',\r\n                    paint: {\r\n                        \r\n                        'circle-color': [\r\n                            \"rgb\",\r\n                            255,\r\n                           [\"get\",\"gValue\"],\r\n                            62\r\n\r\n                        ], //\"#ffc83e\",\r\n                        'circle-opacity': 0.5,\r\n                        'circle-stroke-color': \"#ffc83e\",\r\n                        'circle-stroke-opacity': 1,\r\n                        'circle-stroke-width': 0.5,\r\n                        'circle-radius':  {\r\n                            property: 'capacity',\r\n                    //  //      type: 'exponential',\r\n                    //        base: 2,\r\n                            stops: [\r\n                                [{zoom: 3, value: 1}, 1],\r\n                                [{zoom: 3, value: 18}, 10],\r\n                                [{zoom: 4.5, value: 1}, 3],\r\n                                [{zoom: 4.5, value: 18}, 15],\r\n                                [{zoom: 7, value: 1}, 5],\r\n                                [{zoom: 7, value: 18}, 20],\r\n                                [{zoom: 10, value: 1}, 10],\r\n                                [{zoom: 10, value: 18}, 25]\r\n                       \r\n                            ]\r\n                        }\r\n                        \r\n                    },\r\n\r\n                    'filter': ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]]\r\n                });\r\n                this.map.addLayer({\r\n                    id: 'allpowerplants',\r\n                    type: 'circle',\r\n                    source:\"currentFacilities\",\r\n                    paint: {\r\n                    'circle-radius': {\r\n                        property: 'capacity',\r\n                      //  type: 'exponential',\r\n                      //  base: 2,\r\n                        stops: [\r\n                        [{zoom: 3, value: 1}, 1],\r\n                        [{zoom: 3, value: 1000}, 6],\r\n                        [{zoom: 4.5, value: 1}, 3],\r\n                        [{zoom: 4.5, value: 1000}, 18],\r\n                        [{zoom: 7, value: 1}, 18],\r\n                        [{zoom: 7, value: 1000}, 42],\r\n                        [{zoom: 10, value: 1}, 12],\r\n                        [{zoom: 10, value: 1000}, 54]\r\n                        ]\r\n                    },\r\n                    'circle-color': [\r\n                        'match',\r\n                        ['get', 'type'],\r\n                        \"Coal\", \"#ced1cc\",\r\n                        \"Storage\", \"#4e80e5\",\r\n                        \"Solar\", \"#ffc83e\",\r\n                        \"Hydro\", \"#43cfef\",\r\n                        \"Wind\", \"#00a98e\",\r\n                        \"Biomass\", \"#A7B734\",\r\n                        \"Solar2\", \"#ea545c\",\r\n                        \"Gas\", \"#cc9b7a\",\r\n                        \"Waste\", \"#6b4b06\",\r\n                        /* other */ '#ccc'\r\n                    ],\r\n                    'circle-opacity': 0.3,\r\n                    'circle-stroke-color':  [\r\n                        'match',\r\n                        ['get', 'type'],\r\n                        \"Coal\", \"#ced1cc\",\r\n                        \"Storage\", \"#4e80e5\",\r\n                        \"Solar\", \"#ffc83e\",\r\n                        \"Hydro\", \"#43cfef\",\r\n                        \"Wind\", \"#00a98e\",\r\n                        \"Biomass\", \"#A7B734\",\r\n                        \"Solar2\", \"#ea545c\",\r\n                        \"Gas\", \"#cc9b7a\",\r\n                        \"Waste\", \"#6b4b06\",\r\n                         /*other,*/  '#ccc' \r\n                    ],\r\n                        'circle-stroke-opacity': 1,\r\n                        'circle-stroke-width': 0.5,\r\n                    },\r\n                    'filter': ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType]\r\n                });\r\n\r\n                this.map.addLayer({\r\n                    id: 'unclusters_coal',\r\n                    type: 'circle',\r\n                    source: 'powerplantSource_Coal',\r\n                    paint: {\r\n                        'circle-radius': {\r\n                            property: 'capacity',\r\n                            type: 'exponential',\r\n                            base: 2,\r\n                            stops: [\r\n                                [{zoom: 2, value: 1}, 1],\r\n                                [{zoom: 2, value: 2500}, 6],\r\n                                [{zoom: 4.5, value: 1}, 3],\r\n                                [{zoom: 4.5, value: 2500}, 20],\r\n                                [{zoom: 8, value: 1}, 6],\r\n                                [{zoom: 8, value: 2500}, 32],\r\n                                [{zoom: 12, value: 1}, 9],\r\n                                [{zoom: 12, value: 2500}, 56],\r\n                                [{zoom: 15, value: 1}, 12],\r\n                                [{zoom: 15, value: 2500}, 60]\r\n                                ]\r\n                        },\r\n                        'circle-color':  \"#404040\",\r\n                        'circle-opacity': 0.3,\r\n                        'circle-stroke-color': \"#404040\",\r\n                        'circle-stroke-opacity': 1,\r\n                        'circle-stroke-width': 0.5\r\n                    },\r\n                    'filter': ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]]\r\n               //     'filter': ['!', ['has', 'point_count']]\r\n                });\r\n                this.map.addLayer({\r\n                    id: 'clusters_solar',\r\n                    type: 'circle',\r\n                    source: 'powerplantSource_Solar',\r\n                    filter: [\"all\", [ 'has', 'point_count'],  this.m_filterStartYear, this.m_filterEndYear, this.m_filterType ],\r\n                    \r\n                    paint: {\r\n                       \r\n                        'circle-color': \"#ffc83e\",\r\n                        'circle-radius': [\r\n                            'step',\r\n                            ['get', 'point_count'],\r\n                            2,\r\n                            50,\r\n                            20,\r\n                            100,\r\n                            50\r\n                        ]\r\n                    }\r\n                });\r\n\r\n            })\r\n            var self = this\r\n\r\n            const tooltip = new mapboxgl.Marker(this.tooltipContainer, {\r\n                offset: [-140, 0]\r\n            }).setLngLat([0, 0]).addTo(this.map);\r\n\r\n            this.map.on('mouseenter', 'unclusters_coal', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'unclusters_coal', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'unclusters_coal', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n\r\n            this.map.on('mouseenter', 'unclusters_coal', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'unclusters_coal', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'unclusters_solar', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n\r\n            this.map.on('mouseenter', 'unclusters_solar', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'unclusters_solar', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'unclusters_solar', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n\r\n            this.map.on('mouseenter', 'allpowerplants', function (e) {\r\n                // Change the cursor style as a UI indicator.\r\n                //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mousemove', 'allpowerplants', function (e) {\r\n                tooltip.setLngLat(e.lngLat);\r\n                self.grump = e.features[0]\r\n                self.map.getCanvas().style.cursor = 'pointer';\r\n                self.drawPopup(true)\r\n\r\n            })\r\n\r\n            this.map.on('mouseleave', 'allpowerplants', function (e) {\r\n\r\n                self.map.getCanvas().style.cursor = '';\r\n                self.drawPopup(false)\r\n            });\r\n\r\n            this.map.on('zoomend', function(e){\r\n                self.setState({\r\n                    zoomlevel: self.map.getZoom()\r\n                })\r\n            })\r\n            // Change the cursor style as a UI indicator.\r\n            this.map.getCanvas().style.cursor = 'pointer';\r\n            this.m_initiated = true;\r\n            this.setState({\r\n                zoomlevel: this.map.getZoom()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    setTooltip(show, color, name, capacity, open, decom, type2) {\r\n\r\n        if (show) {\r\n\r\n            ReactDOM.render(\r\n                React.createElement(\r\n                    PopupContent, {\r\n                    color, name, capacity, open, decom, type2\r\n                }\r\n                ),\r\n                this.tooltipContainer\r\n            )\r\n        } else {\r\n\r\n            ReactDOM.unmountComponentAtNode(this.tooltipContainer)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n\r\n        //   console.log(this.props.filter)\r\n        if (this.props.activeYear !== this.state.currentYear) {\r\n            this.setState({\r\n                currentYear: this.props.activeYear\r\n\r\n            })\r\n            this.m_filterStartYear = ['<=', ['number', ['get', 'yearStart']], this.props.activeYear]\r\n            this.m_filterEndYear = ['>=', ['number', ['get', 'yearEnd']], this.props.activeYear]\r\n            this.updateFilters()\r\n        }\r\n        if (this.props.types !== this.state.rawtypes) {\r\n            this.m_filterType = [\"any\"]\r\n            //create the filter syntax fromthe actionFilter provided\r\n            for (var i = 0; i < this.props.types.length; i++) {\r\n                if (this.props.types[i].active)\r\n                    this.m_filterType.push([\"==\", [\"get\", \"type\"], this.props.types[i].type])\r\n            }\r\n\r\n            this.setState({\r\n\r\n                rawtypes: this.props.types\r\n            })\r\n            this.updateFilters()\r\n        }\r\n\r\n        this.init()\r\n    }\r\n    componentDidMount() {\r\n        this.tooltipContainer = document.createElement('div');\r\n        this.init()\r\n    }\r\n    drawPopup(show) {\r\n\r\n        var o = this.grump\r\n        var name = o.properties.site;\r\n        var capacity = o.properties.capacity;\r\n        var open = o.properties.yearOpen;\r\n        var decom = o.properties.yearEnd;\r\n        var plantColor = this.m_colors[o.properties.type];\r\n        var type2 = o.properties.type2;\r\n        var type = o.properties.type;\r\n        this.setTooltip(show, plantColor, name, capacity, open, type===\"Solar\" ? 9999 : decom, type=== \"Solar\" ? type : type2)\r\n\r\n        // Ensure that if the map is zoomed out such that multiple\r\n        // copies of the feature are visible, the popup appears over the copy being pointed to.\r\n        //   while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n        //      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n        // }\r\n\r\n        // Populate the popup and set its coordinates\r\n        // based on the feature found.\r\n        //  this.popup.setLngLat(coordinates)\r\n        //      .setHTML(<PopupContent color={plantColor} name={name} capacity={this.roundToOne(capacity)} lowCarbon={lowCarbon} operator={operator} open={open} fuel={this.getFuel(type, fuelDetail)} chp={chp} />)\r\n        //      .addTo(this.map);\r\n    }\r\n\r\n    setFilterType(filtertype) {\r\n        if (this.map.isStyleLoaded()) {\r\n            this.m_filterType = [\"all\", [\"==\", [\"get\", \"type\"], filtertype]]\r\n            this.updateFilters()\r\n        }\r\n    }\r\n\r\n    updateFilters() {\r\n        if (this.map.isStyleLoaded()) {\r\n            // map.setFilter('powerplants', ['all', filterOperator, filterType, filterStartYear, filterEndYear, filterSite, filterCapacity]);\r\n            this.map.setFilter('unclusters_coal', ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]] )\r\n           \r\n            this.map.setFilter('unclusters_solar', ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType, ['!', ['has', 'point_count']]])\r\n            this.map.setFilter('clusters_solar', ['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType,['has','point_count']])\r\n            this.map.setFilter('allpowerplants',['all', this.m_filterStartYear, this.m_filterEndYear, this.m_filterType])\r\n        }\r\n    }\r\n\r\n    getFuel = (type, fuelDetail) => {\r\n        if (fuelDetail === \"-\") {\r\n            return type\r\n        } else if (type === \"Wind\" || type === \"Hydro\") {\r\n            return fuelDetail\r\n        } else {\r\n            return type + \", \" + fuelDetail\r\n        }\r\n    }\r\n\r\n    roundToOne = (capacity) => {\r\n        return +(Math.round(capacity + \"e+1\") + \"e-1\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.debug===true ? <div className=\"Debug\">Debug: zoom level: {this.state.zoomlevel} </div> : \"\" }\r\n            <div style={{ height: this.props.height }} ref={el => this.mapContainer = el} className=\"mapContainer topDistance\" id=\"map\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PopupContent = ({ color, name, capacity, open, decom, type2 }) => (\r\n\r\n    <div className={`colour-key popupDiv`}>\r\n        <h3 className=\"popupHeading\" style={{ color: color }}> {name}</h3>\r\n        <div className=\"popupInfo\" style={{ 'backgroundColor': color }} >\r\n            <p><span className=\"label-title\">Capacity: </span>{capacity}<span className=\"units\">  MW</span></p>\r\n            {type2 !== \"\" ? <p><span className=\"label-title\">Type: </span>{type2}</p> : \"\"}\r\n            {open !== undefined ? <p><span className=\"label-title\">Year opened: </span>  {open} </p> : \"\"}\r\n             {decom !== 9999 ?<p><span className=\"label-title\"> Decomission: </span> {decom} </p> : \"\"}\r\n           \r\n        </div>\r\n    </div>\r\n)\r\n\r\n","// with help from https://bl.ocks.org/reinson/166bae46dd106b45cf2d77c7802768ca\r\n\r\n// zero data converted to 0.001 to avoid messing up the order of the colours if bars are added/removed\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  Bar\r\n} from 'react-chartjs-2';\r\n\r\nimport stacked100 from \"chartjs-plugin-stacked100\"\r\n\r\nexport default class Stackedbarchart extends PureComponent {\r\n  m_colors = {\r\n    \"Coal\": \"#91908d\",\r\n    \"Solar\": \"#ffc83e\",\r\n    \"Hydro\": \"#43cfef\",\r\n    \"Wind\": \"#00a98e\",\r\n    \"Waste\": \"#6b4b06\",\r\n    \"Solar2\": \"#ea545c\",\r\n    \"Gas\": \"#cc9b7a\"\r\n  }\r\n\r\n  /*\r\n     \"Coal\", \"#ced1cc\",\r\n                          \"Storage\", \"#4e80e5\",\r\n                          \"Solar\", \"#ffc83e\",\r\n                          \"Hydro\", \"#43cfef\",\r\n                          \"Wind\", \"#00a98e\",\r\n                          \"Biomass\", \"#A7B734\",\r\n                          \"Solar2\", \"#ea545c\",\r\n                          \"Gas\", \"#cc9b7a\",\r\n                          \"Waste\", \"#6b4b06\",*/\r\n\r\n  state = {\r\n    data: {\r\n      labels: [\"%\"],\r\n      datasets: [{\r\n        label: 'Employee',\r\n        backgroundColor: \"#caf270\",\r\n        data: [12, 59, 5, 56, 58, 12, 59, 87, 45],\r\n      }]\r\n    },\r\n    percentages: null\r\n  }\r\n  componentDidUpdate() {\r\n\r\n    if(this.props.percentages!== this.state.percentages){\r\n    console.log(this.props.percentages)\r\n    var datasets = []\r\n    for (var i = 0; i < this.props.percentages.length; i++) {\r\n      var newObj = {}\r\n      newObj.label = this.props.percentages[i].type\r\n      newObj.backgroundColor = this.m_colors[newObj.label]\r\n      newObj.data = []\r\n      newObj.data[0] = this.props.percentages[i].percentage\r\n      datasets.push(newObj)\r\n    }\r\n\r\n    this.setState({\r\n      data: {\r\n        labels: [\"capacity\"],\r\n        datasets: datasets\r\n      },\r\n      percentages: this.props.percentages\r\n    })\r\n  }\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    var datasets = []\r\n    for (var i = 0; i < this.props.percentages.length; i++) {\r\n      var newObj = {}\r\n      newObj.label = this.props.percentages[i].type\r\n      newObj.backgroundColor = this.m_colors[newObj.label]\r\n      newObj.data = []\r\n      newObj.data[0] = this.props.percentages[i].percentage\r\n      datasets.push(newObj)\r\n    }\r\n\r\n    this.setState({\r\n      data: {\r\n        \r\n        datasets: datasets\r\n      },\r\n      percentages: this.props.percentages\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n    \r\n       \r\n        <Bar\r\n          data={this.state.data}\r\n          width={this.props.width}\r\n          height={this.props.height}\r\n          options={{\r\n            tooltips: {\r\n              \r\n              displayColors: false,\r\n              callbacks: {\r\n                title: function() {},\r\n                \r\n                label: function(tooltipItem, data) {\r\n                  var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n                 \r\n                  label +=\": \" + tooltipItem.yLabel;\r\n                  return  label + \"%\";\r\n              }\r\n             }\r\n            },\r\n            scales: {\r\n              xAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: false,\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                stacked: true,\r\n                gridLines: {\r\n                  display: true,\r\n                },\r\n                \r\n                position: 'right',\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                  max: 100,\r\n                  stepSize: 20\r\n                }\r\n               \r\n              }]\r\n            },\r\n            layout: {\r\n              padding: {\r\n                  left: 20\r\n              }\r\n          },\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            legend: { display: false }\r\n          }}\r\n        />\r\n     \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport './css/responsive.css'\r\n//import ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\r\nimport StoryPanel from './StoryPanel.js'\r\n//import * as d3 from 'd3'\r\nimport dataCoal from './AUSdata/powerStations_coal.json'\r\nimport dataSolar from './AUSdata/powerStations_solar.json'\r\nimport currentData from \"./AUSdata/facility_registry.json\"\r\nimport MapFunctions from './MapFunctions';\r\nimport sectiondata from './playdata/sections.json'\r\nimport ScrollIntoView from 'react-scroll-into-view'\r\nimport Stackedbarchart from './stacked-bar.js'\r\n\r\nimport *  as d3 from 'd3'\r\nimport stackedData from './AUSdata/yearDistribution.csv'\r\nclass ScrollyTeller extends Component {\r\n\r\n\r\n    m_debug= true\r\n    m_percentageCalcs = []\r\n    updateDimensions = () => {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight, panelHeight: window.innerHeight - 100 });\r\n\r\n    };\r\n  \r\n    //  m_mapfilter = null;\r\n    state = {\r\n        sections: [],\r\n        width: 0,\r\n        height: 0,\r\n        //the years should be read from a file with their corresponding html content\r\n        // sorteddata: [],\r\n        activeId: 0,\r\n        panelHeight: 800,\r\n        types: [{ \"type\": \"Coal\", \"active\": true },\r\n        { \"type\": \"Solar\", \"active\": true },\r\n        { \"type\": \"Solar2\", \"active\": true },\r\n        { \"type\": \"Hydro\", \"active\": true },\r\n        { \"type\": \"Waste\", \"active\": true },\r\n        { \"type\": \"Storage\", \"active\": true },\r\n        { \"type\": \"Wind\", \"active\": true },\r\n        { \"type\": \"Gas\", \"active\": true }],\r\n\r\n        percentages: [\r\n            { \"type\": \"Coal\", \"percentage\": 45 },\r\n            { \"type\": \"Solar\", \"percentage\": 20 },\r\n            { \"type\": \"Solar2\", \"percentage\": 10 },\r\n            { \"type\": \"Hydro\", \"percentage\": 5 },\r\n            { \"type\": \"Waste\", \"percentage\": 5 },\r\n            { \"type\": \"Wind\", \"percentage\": 5 },\r\n            { \"type\": \"Gas\", \"percentage\": 15 }\r\n        ]\r\n    }\r\n    panelChanged = false\r\n    // m_mapFunctions = null\r\n    //\"Facility Name\", \"Status\", \"Region\", \"Technology\", \"Generator Capacity (MW)\", \"Latitude\", \"Longitude\"\r\n\r\n\r\n    GetNewPercentages = (year) => {\r\n        console.log(year)\r\n       \r\n        if (year < this.m_percentageCalcs[0].year || year === undefined) {\r\n\r\n               return this.m_percentageCalcs[0].vals\r\n          \r\n        } else if (year> this.m_percentageCalcs[this.m_percentageCalcs.length - 1].year) {\r\n            \r\n            return    this.m_percentageCalcs[this.m_percentageCalcs.length - 1].vals\r\n           \r\n        } else {\r\n                var i=0\r\n                while(this.m_percentageCalcs[i].year < year){\r\n       \r\n                    i++\r\n                }\r\n                console.log(this.m_percentageCalcs[i].vals)\r\n                return  this.m_percentageCalcs[i].vals      \r\n        }\r\n    \r\n    }\r\n\r\n    prepPercentages = (data) => {\r\n      //  console.log(data)\r\n        //m_percentageCalcs\r\n        /*0: {Year: \"1989\", Coal: \"121167.00\", Solar: \"\", Solar2: \"\", Hydro: \"14880.00\", …}\r\n1: {Year: \"1990\", Coal: \"125559.00\", Solar: \"\", Solar2: \"\", Hydro: \"16103.00\", …}\r\n2: {Year: \"1991\", Coal: \"128884.10\", Solar: \"10.90\", Solar2: \"\", Hydro: \"15768.00\", …}\r\n3: {Year: \"1992\", Coal: \"131120.70\", Solar: \"13.30\", Solar2: \"\", Hydro: \"16953.00\", …}\r\n4: {Year: \"1993\", Coal: \"135434.10\", Solar: \"15.90\", Solar2: \"\", Hydro: \"16649.00\", …}\r\n5: {Year: \"1994\", Coal: \"138354.10\", Solar: \"18.90\", Solar2: \"\", Hydro: \"16239.00\", …}*/\r\n        var row, sum\r\n        var arr = []\r\n        for (var i = 0; i < data.length; i++) {\r\n            arr = []\r\n            sum = 0\r\n            row = data[i]\r\n            row.Coal = parseFloat(row.Coal)\r\n            row.Solar = parseFloat(row.Solar)\r\n            row.Solar2 = parseFloat(row.Solar2)\r\n            row.Gas = parseFloat(row.Gas)\r\n            row.Waste = parseFloat(row.Waste)\r\n            row.Hydro = parseFloat(row.Hydro)\r\n            row.Wind = parseFloat(row.Wind)\r\n            if (!isNaN(row.Coal)) {\r\n                sum += row.Coal\r\n            }\r\n            if (!isNaN(row.Solar)) {\r\n                sum += row.Solar\r\n            }\r\n            if (!isNaN(row.Solar2)) {\r\n                sum += row.Solar2\r\n            }\r\n            if (!isNaN(row.Gas)) {\r\n                sum += row.Gas\r\n            }\r\n            if (!isNaN(row.Waste)) {\r\n                sum += row.Waste\r\n            }\r\n            if (!isNaN(row.Hydro)) {\r\n                sum += row.Hydro\r\n            }\r\n            if (!isNaN(row.Wind)) {\r\n                sum += row.Wind\r\n            }\r\n         //   console.log(row)\r\n            // sum = parseFloat(row.Coal) + parseFloat(row.Solar) + parseFloat(row.Solar2) + parseFloat(row.Hydro) + parseFloat(row.Gas) + parseFloat(row.Waste) + parseFloat(row.Wind)\r\n\r\n            arr.push({ \"type\": \"Coal\", \"percentage\": +parseFloat( (row.Coal) / sum * 100 ).toFixed(2)})\r\n            arr.push({ \"type\": \"Solar\", \"percentage\": +parseFloat((row.Solar) / sum * 100).toFixed(2) })\r\n            arr.push({ \"type\": \"Solar2\", \"percentage\": +parseFloat((row.Solar2) / sum * 100).toFixed(2) })\r\n            arr.push({ \"type\": \"Hydro\", \"percentage\": +parseFloat((row.Hydro) / sum * 100).toFixed(2) })\r\n            arr.push({ \"type\": \"Waste\", \"percentage\": +parseFloat((row.Waste) / sum * 100).toFixed(2) })\r\n            arr.push({ \"type\": \"Wind\", \"percentage\": +parseFloat((row.Wind) / sum * 100 ).toFixed(2)})\r\n            arr.push({ \"type\": \"Gas\", \"percentage\": +parseFloat((row.Gas) / sum * 100).toFixed(2) })\r\n          \r\n            this.m_percentageCalcs.push({ \"year\": parseFloat(row.Year), vals: arr })\r\n        }\r\n       // console.log(this.m_percentageCalcs)\r\n       // this.updatePercentages(1960)\r\n       this.setState({\r\n           \r\n        percentages: this.GetNewPercentages( this.state.sections[0].year)\r\n        \r\n    })\r\n    }\r\n\r\n    UNSAFE_componentWillMount = function () {\r\n        window.addEventListener('resize', this.updateDimensions);\r\n        this.updateDimensions()\r\n\r\n        d3.csv(stackedData).then(this.prepPercentages);\r\n\r\n        /* make solar not disappear because of dataset...*/\r\n        var postcode = \"\";\r\n        var i\r\n        for( i = 0; i <dataSolar.features.length; i ++){\r\n            var obj = dataSolar.features[i]\r\n            if ( obj.properties.site !== postcode) {\r\n                if(i>0){\r\n                    dataSolar.features[i-1].properties.yearEnd=9999\r\n                }\r\n                postcode = obj.properties.site\r\n            } \r\n           \r\n        }\r\n        \r\n        for ( i = 0; i < sectiondata.sections.length; i++) {\r\n            sectiondata.sections[i].renderparagraphs = this.createPanelContent(sectiondata.sections[i].year, sectiondata.sections[i].paragraphs)\r\n            //     console.log(sectiondata.sections[i].renderparagraphs)\r\n        }\r\n        //  console.log(sectiondata.sections[4].renderparagraphs)\r\n        //read the content from file.\r\n        this.setState({\r\n            sections: sectiondata.sections\r\n        })\r\n\r\n        //  console.log(sectiondata.sections)\r\n        var val;\r\n        for (var j = 0; j < dataSolar.features.length; j++) {\r\n\r\n             val = dataSolar.features[j].properties.capacity;\r\n            if(val > 15000 ){\r\n                dataSolar.features[j].properties.gValue = 20\r\n            } else if( val < 200) {\r\n                dataSolar.features[j].properties.gValue = 200;\r\n            } else {\r\n               \r\n                dataSolar.features[j].properties.gValue =  300 - (Math.trunc((val - 200) * (200 - 50)/(15000-200) + 50))\r\n           //     console.log(dataSolar.features[j].properties.capacity);\r\n                \r\n            }\r\n            dataSolar.features[j].properties.capacity = (dataSolar.features[j].properties.capacity /= 1000).toFixed(2);\r\n           \r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateDimensions);\r\n    }\r\n    allPanels = []\r\n    setActiveID = (id) => {\r\n        this.setState({\r\n            activeId: id,\r\n       \r\n            \r\n        })\r\n\r\n        if(this.m_percentageCalcs!==undefined && this.m_percentageCalcs.length > 0){\r\n            this.setState({\r\n           \r\n                percentages: this.GetNewPercentages( this.state.sections[id].year)\r\n                \r\n            })\r\n        }\r\n      //  this.updatePercentages(this.state.sections[id].year)\r\n        //this.m_mapFunctions.setFilterYearStart(this.state.years[id])\r\n        //   this.m_mapFunctions.setFilterStartEnd(this.state.sections[id].year)\r\n\r\n        //  this.updatePercentages()\r\n        //in each year i want to display plants that HAVE STARTED but NOT YET ENDED\r\n    }\r\n\r\n    createPanelContent(year, paragraphs) {\r\n\r\n        //read the text from somewhere based on the given year\r\n        var result = [];\r\n        var filter = \"\";\r\n        var key = \"\"\r\n        for (var i = 0; i < paragraphs.length; i++) {\r\n            key = year + \"_\" + i\r\n            //check for features like links, if its a link, replace the \"text\" with a hyperlinnk to the \"url\"\r\n            if (paragraphs[i].features) {\r\n                for (var j = 0; j < paragraphs[i].features.length; j++) {\r\n                    var feature = paragraphs[i].features[j]\r\n                    if (feature.type === \"link\") {\r\n                        paragraphs[i].text = paragraphs[i].text.replace(feature.text, '<a href=\"' + feature.url + '\" target=\"_blank\">' + feature.text + '</a>')\r\n                        //                console.log(paragraphs[i].text)\r\n                    }\r\n                }\r\n            }\r\n            //if actions aredefined, they are added to the element here.\r\n            if (paragraphs[i].actions) {\r\n                for (j = 0; j < paragraphs[i].actions.length; j++) {\r\n                    var action = paragraphs[i].actions[j]\r\n                    if (action.highlight) {\r\n                        if (action.highlight.type === \"type\") {\r\n                            filter = {\r\n\r\n                                \"action\": this.setActiveMulti,\r\n                                \"objects\": []\r\n                            }\r\n                        } else if (action.highlight.type === \"plant\") {\r\n                            filter = {\r\n\r\n                                \"action\": this.setActiveName,\r\n                                \"objects\": []\r\n                            }\r\n                        }\r\n                        //highlight means highlight the words in the text with a class of the same name, and filter things on the map of this name\r\n                        for (var k = 0; k < action.highlight.keywords.length; k++) {\r\n                            paragraphs[i].text = paragraphs[i].text.replace(action.highlight.keywords[k], \"<span class='\" + action.highlight.keywords[k] + \"'>\" + action.highlight.keywords[k] + \"</span>\")\r\n                            filter.objects.push(this.cap(action.highlight.keywords[k]))\r\n\r\n                            //capitalise first letter otherwise the filter breaks \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            result.push(\r\n                <div content={paragraphs[i]} id={key} actionFilter={filter} />\r\n            )\r\n        }\r\n        // console.log(result)\r\n        return result\r\n\r\n    }\r\n\r\n    //gets called from child components or when the user clicked the type nav menu. updates state of that menu accordingly, also when a scrolltrigger (de)activated a type\r\n    setActiveMulti = (types) => {\r\n\r\n        var arr = null\r\n        if (types === null) {\r\n            arr = [{ \"type\": \"Coal\", \"active\": true },\r\n            { \"type\": \"Gas\", \"active\": true },\r\n            { \"type\": \"Hydro\", \"active\": true },\r\n            { \"type\": \"Wind\", \"active\": true },\r\n            { \"type\": \"Waste\", \"active\": true },\r\n            { \"type\": \"Solar\", \"active\": true },\r\n            { \"type\": \"Solar2\", \"active\": true }]\r\n\r\n        } else {\r\n            arr = [{ \"type\": \"Coal\", \"active\": false },\r\n            { \"type\": \"Gas\", \"active\": false },\r\n            { \"type\": \"Hydro\", \"active\": false },\r\n            { \"type\": \"Wind\", \"active\": false },\r\n            { \"type\": \"Waste\", \"active\": false },\r\n            { \"type\": \"Solar\", \"active\": false },\r\n            { \"type\": \"Solar2\", \"active\": true }]\r\n            for (var i = 0; i < arr.length; i++) {\r\n                for (var j = 0; j < types.length; j++) {\r\n                    if (arr[i].type === types[j]) {\r\n                        arr[i].active = true\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        this.setState({\r\n            types: arr\r\n        })\r\n    }\r\n\r\n    setActive = (ttype, active) => {\r\n        //  console.log(index)\r\n        this.setState(state => {\r\n            const types = state.types.map((type, i) => {\r\n                if (type === ttype) {\r\n                    return { \"type\": type.type, \"active\": active }\r\n                } else {\r\n                    return type;\r\n                }\r\n            });\r\n            return {\r\n                types\r\n            };\r\n        })\r\n    }\r\n\r\n    setActiveName = (name) => {\r\n\r\n    }\r\n    toggleActive = (ttype) => {\r\n       // console.log(ttype)\r\n        this.setState(state => {\r\n            const types = state.types.map((type) => {\r\n                if (type.type === ttype) {\r\n                    return { \"type\": type.type, \"active\": !type.active }\r\n                } else {\r\n                    return type;\r\n                }\r\n            });\r\n            return {\r\n                types\r\n            };\r\n        })\r\n    }\r\n    //capitalise the first letter of  string\r\n    cap(lower) {\r\n        return lower.replace(/^\\w/, c => c.toUpperCase());\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"navbar\" id=\"yearNav\">\r\n                    {this.state.sections.map(\r\n                        (section, i) =>\r\n                            <NavMenuItem\r\n                                key={i}\r\n                                id={i}\r\n                                name={section.year}\r\n                                activeId={this.state.activeId}\r\n                            />\r\n                    )}\r\n                </div>\r\n                <div className=\"navbar navbar_right\" id=\"typeNav\">\r\n                    <span className=\"typeSelectionLabel\">Type selection</span>\r\n                    {this.state.types.map(\r\n                        (type, i) =>\r\n                            <NavMenuTypeItem\r\n                                key={i}\r\n                                onClickA={this.toggleActive}\r\n                                type={type.type}\r\n                                active={type.active}\r\n                            />\r\n                    )}\r\n                </div>\r\n                <div className=\"MainContainer\">\r\n                    {/*  <StackedBar  percentages={this.state.percentages} height={this.state.panelHeight}/>--> */}\r\n                    <div className=\"Panels topDistance\" style={{ height: this.state.panelHeight }}>\r\n\r\n                        {this.state.sections.map(\r\n                            (section, i) =>\r\n\r\n                                <StoryPanel\r\n                                    key={i}\r\n                                    id={i}\r\n                                    app={this}\r\n                                    activeID={this.state.activeId} //the Storypanels figure out if they are the active panel and display accordingly\r\n                                    title={section.year}\r\n                                    anchorname={\"section\" + section.year}\r\n                                    paragraphs={section.renderparagraphs}\r\n                                />\r\n                        )}\r\n                    </div>\r\n                    <StackedBar height={this.state.panelHeight-70} percentages={this.state.percentages} />\r\n                    <MapFunctions types={this.state.types} coalData={dataCoal} debug={ this.m_debug} currentData={currentData} solarData={dataSolar} height={this.state.panelHeight} activeYear={this.state.sections !== undefined ? this.state.sections[this.state.activeId].year : \"1950\"} />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass NavMenuTypeItem extends Component {\r\n    handleClick = () => {\r\n        this.props.onClickA(this.props.type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} className={`navItem navItemColor ${this.props.active ? \"navItemActive_\" + this.props.type : \"\"}`}> {this.props.type} </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nclass StackedBar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mapBorder\" style={{ height: this.props.height }} id=\"stackedBar\">\r\n                <Stackedbarchart percentages={this.props.percentages} width={85} height={this.props.height} /> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst NavMenuItem = ({ id, name, activeId }) => (\r\n\r\n    <ScrollIntoView\r\n        selector={`#section${name}_id_p0`}\r\n        alignToTop={false} >\r\n        <div className={`navItem ${id === activeId ? \"navItemActive\" : \"\"} `}> {name} </div>\r\n    </ScrollIntoView>\r\n)\r\nReactDOM.render(<ScrollyTeller />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/yearDistribution.d787f0f2.csv\";"],"sourceRoot":""}